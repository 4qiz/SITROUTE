<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Montsserrat"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>
    
    <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}">

        <Setter Property="Foreground" Value="{StaticResource B_onSurface}" />
        <Setter Property="CaretBrush" Value="{StaticResource B_surfaceVariant}" />
        <Setter Property="Background" Value="{StaticResource B_surface}" />
        <Setter Property="BorderBrush" Value="{StaticResource B_outline}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Padding" Value="0,3,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        
    </Style>

    <Style x:Key="DefTB"
        TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource DefaultTextBoxStyle}"  />

    <!--///////////////////////////////////////////////////COMBOBOX///////////////////////////////////////////////////-->

    <Thickness x:Key="ComboBoxPadding">10,8,10,8</Thickness>
    <Thickness x:Key="ComboBoxBorderThemeThickness">1,1,1,1</Thickness>
    <Thickness x:Key="ComboBoxAccentBorderThemeThickness">0,0,0,2</Thickness>
    <Thickness x:Key="ComboBoxChevronMargin">8,0,10,0</Thickness>
    <Thickness x:Key="ComboBoxItemMargin">3,2,3,0</Thickness>
    <Thickness x:Key="ComboBoxItemContentMargin">10,8,8,8</Thickness>
    <system:Double x:Key="ComboBoxChevronSize">11.0</system:Double>
    <system:Double x:Key="ComboBoxPopupMinHeight">32.0</system:Double>

    <Style x:Key="DefaultComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <!--  Focus by parent element  -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--  Focus by parent element  -->
        <!--  Universal WPF UI ContextMenu  -->
        <!--  Universal WPF UI ContextMenu  -->
        <Setter Property="Foreground" Value="{StaticResource B_onBackground}" />
        <Setter Property="CaretBrush" Value="{StaticResource B_onBackground}" />
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Decorator
                        x:Name="PART_ContentHost"
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        TextElement.Foreground="{StaticResource B_onBackground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <!--  Focus by parent element  -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--  Focus by parent element  -->
        <Setter Property="Foreground" Value="{StaticResource B_onBackground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Border.CornerRadius" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="ContentBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <ContentPresenter
                            x:Name="PART_ContentHost"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI focus  -->
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="{StaticResource ComboBoxItemMargin}" />
        <Setter Property="Padding" Value="{StaticResource ComboBoxItemContentMargin}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Border.CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border
                            Name="ContentBorder"
                            Margin="{TemplateBinding Margin}"
                            Padding="0"
                            VerticalAlignment="Stretch"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <ContentPresenter
                                    x:Name="PART_ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center" />
                                <Rectangle
                                    x:Name="ActiveRectangle"
                                    Width="3"
                                    Height="16"
                                    Margin="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource B_primary}"
                                    RadiusX="2"
                                    RadiusY="2"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="{StaticResource B_surfaceVariant}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ActiveRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{StaticResource B_onBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource B_onSurfaceVariant}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI focus  -->
        <!--  Universal WPF UI ContextMenu  -->
        <!--  TEXT COLOR -->
        <Setter Property="Foreground" Value="{StaticResource B_onBackground}" />
        <Setter Property="Background" Value="{StaticResource B_background}" />
        <Setter Property="BorderBrush" Value="{StaticResource B_outline}" />
        <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Border.CornerRadius" Value="5" />
        <Setter Property="Popup.PopupAnimation" Value="None" />
        <!--  WPF doesn't like centering, the animation is ugly and the mouse button sometimes clicks right away.  -->
        <Setter Property="Popup.Placement" Value="Bottom" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border
                            x:Name="ContentBorder"
                            Grid.Row="0"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                               
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                        <ContentPresenter
                                            Name="PART_ContentPresenter"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            IsHitTestVisible="False"
                                            TextElement.Foreground="{TemplateBinding Foreground}" />
                                    </Grid>
                                    
                                    <Grid
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="0">
                                        <ToggleButton
                                            Name="ToggleButton"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            ClickMode="Press"
                                            Focusable="False"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{StaticResource DefaultComboBoxToggleButtonStyle}" />
                                    </Grid>
                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                        <TextBox
                                            x:Name="PART_EditableTextBox"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            FontSize="{TemplateBinding FontSize}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                            Style="{StaticResource DefaultComboBoxTextBoxStyle}" />
                                    </Grid>
                                </Grid>
                                <Popup
                                    x:Name="Popup"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    VerticalAlignment="Center"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    Placement="{TemplateBinding Popup.Placement}"
                                    PopupAnimation="{TemplateBinding Popup.PopupAnimation}"
                                    VerticalOffset="1">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Margin="0"
                                        Padding="0,4,0,6"
                                        Background="{StaticResource B_surface}"
                                        BorderBrush="Black"
                                        BorderThickness="0"
                                        CornerRadius="5"
                                        SnapsToDevicePixels="True">
                                        <Border.RenderTransform>
                                            <TranslateTransform />
                                        </Border.RenderTransform>
                                        <Grid>

                                            <Grid>
                                                <ScrollViewer
        MaxHeight="{TemplateBinding MaxDropDownHeight}"
        Margin="0"
        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
        SnapsToDevicePixels="True"
        TextElement.FontSize="{TemplateBinding FontSize}"
        TextElement.FontWeight="{TemplateBinding FontWeight}"
        TextElement.Foreground="{TemplateBinding Foreground}"
        VerticalScrollBarVisibility="Hidden">
                                                    <StackPanel
            IsItemsHost="True"
            KeyboardNavigation.DirectionalNavigation="Contained"
            TextElement.FontSize="{TemplateBinding FontSize}" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <Border
                            x:Name="AccentBorder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            BorderBrush="White"
                            BorderThickness="{StaticResource ComboBoxAccentBorderThemeThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="{StaticResource ComboBoxPopupMinHeight}" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="False">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="IsEditable" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="White" />
                            <Setter TargetName="AccentBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentBorder" Property="Background" Value="Black" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentBorder" Property="Background" Value="Black" />
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="Black" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="{x:Type ComboBox}" />

</ResourceDictionary>